var cms=cms||{};cms.components=[];
!function(t,e){function o(t){i=this,this.element=t,this.componentClass=".component",this.initializeComponents(),this.bindEvents()}function n(t){var e=$(t.currentTarget).val();switch($(t.currentTarget).attr("id")){case"view-mode":i.setMode(e);break;case"login-state":i.setState(e)}}t.App=o,t.components=[];var i;o.prototype.constructor=o,o.prototype.currentMode="edit",o.prototype.currentState="loggedin",o.prototype.initializeComponents=function(){var t=this.componentClass;this.pageComponents=$(t).map(this.createComponent)},o.prototype.bindEvents=function(){$("#mode select#view-mode").change(n),$("#mode select#login-state").change(n)},o.prototype.createComponent=function(){var o=$(this).data("component"),n=t.components[o];return o&&n||(n=e),new n(this,i)},o.prototype.setMode=function(t){this.currentMode=t,this.toggleMode(t)},o.prototype.setState=function(t){"preview"==this.currentMode&&(this.currentState=t,this.toggleState(t))},o.prototype.toggleMode=function(t){$(i.element).attr("data-mode",t),$.each(i.pageComponents,function(t,e){e.setMode(i.currentMode)})},o.prototype.toggleState=function(t){$(i.element).attr("data-state",t),$.each(i.pageComponents,function(t,e){e.setState(i.currentState)})}}(cms,cms.Component);
!function(t){function e(t,e){n=this,this.element=$(t),this.app=e,this.initialize()}t.Component=e;var n,o,r;Object.defineProperty(this,"currentMode",{get:function(){return o},set:function(t){o=t,n.toggleMode()}}),Object.defineProperty(this,"currentState",{get:function(){return r},set:function(t){r=t,n.toggleState()}}),e.prototype.isLogged=!1,e.prototype.initialize=function(){this.setMode(this.app.currentMode),this.setState(this.app.currentState),this.bindEvents()},e.prototype.bindEvents=function(){},e.prototype.setMode=function(t){$(this.element).removeClass(currentMode),this.isPreview="preview"==t,currentMode=t},e.prototype.setState=function(t){currentState&&$(this.element).removeClass(currentState),this.isLogged="loggedin"==t,currentState=t},e.prototype.toggleMode=function(){$(this.element).attr("data-currentMode",currentMode),$(this.element).addClass(currentMode),this.onToggleMode()},e.prototype.toggleState=function(){$(this.element).attr("data-currentState",currentState),$(this.element).addClass(currentState),this.onToggleState()},e.prototype.onToggleMode=function(){},e.prototype.onToggleState=function(){}}(cms);
var Person=function(){var t=0,i="John Doe";this.initialize=function(n,e){i=n||i,t=e||t},arguments.length&&this.initialize(),this.getName=function(){return i},this.setName=function(t){i=t},this.getAge=function(){return t},this.addBirthday=function(){t++},this.toString=function(){return"My name is "+this.getName()+"and I am "+t+" years old."}};
!function(t,o){function e(t,o){Object.getPrototypeOf(e.prototype).constructor.call(this,t,o)}t.components.Title=e,e.prototype=Object.create(t.Component.prototype),e.prototype.constructor=e;var i;e.prototype.initialize=function(){this.title=this.element.find("#title-value")[0],this.title_color_input=this.element.find("#color-value")[0],this.logged_color_input=this.element.find("#color-login-value")[0],i=this,o.prototype.initialize.call(this)},e.prototype.bindEvents=function(){$(this.element).find("input").on("keydown",function(t){var o=$(this);13==t.keyCode&&i.setValue(o.val(),o.attr("id"))})},e.prototype.setValue=function(t,o){switch(o){case"color-value":i.setTitleColor(t);break;case"color-login-value":i.setLoggedColor(t)}},e.prototype.onToggleMode=function(){this.title.readOnly=this.isPreview,this.isPreview?this.setState(currentState):this.updateColor(this.title_color||"black")},e.prototype.onToggleState=function(){var t;this.isLogged?(t=this.logged_color||this.title_color,this.updateColor(t)):this.updateColor(this.title_color||"black")},e.prototype.setLoggedColor=function(t){this.logged_color=t},e.prototype.setTitleColor=function(t){this.title_color=t,this.updateColor(t)},e.prototype.updateColor=function(t){$(this.title).css({color:t})}}(window.cms,window.cms.Component);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
